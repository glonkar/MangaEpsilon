<metro:MetroWindow x:Class="MangaEpsilon.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:metro="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:metro2="clr-namespace:MahApps.Metro;assembly=MahApps.Metro"
        xmlns:vm="clr-namespace:MangaEpsilon.ViewModel"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:Behaviours="clr-namespace:MahApps.Metro.Behaviours;assembly=MahApps.Metro"
        xmlns:crystal="clr-namespace:Crystal.Core;assembly=Amrykid.Crystal"
        xmlns:utils="clr-namespace:Crystal.Utilities;assembly=Amrykid.Crystal"
        xmlns:i18n="clr-namespace:Crystal.Localization;assembly=Amrykid.Crystal"
        xmlns:conv="clr-namespace:MangaEpsilon.Converters"
        xmlns:metrigs="clr-namespace:MangaEpsilon.Triggers"
        xmlns:meap="clr-namespace:MangaEpsilon.AttachedProperties"
        xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        Title="{i18n:CrystalLocalizedValueMarkup Key='MainApplicationTitle',NullValue='MangaEpsilon'}" Height="669" Width="756" ShowTitleBar="False" x:Name="thisWindow" SaveWindowPosition="True"
                   utils:MainWindowSetterHelper.IsMainWindow="True" WindowState="Maximized" ShowActivated="True" Closing="thisWindow_Closing" Icon="/Resources/AxVXk48.png" StateChanged="thisWindow_StateChanged">
    <Window.DataContext>
        <vm:MainPageViewModel/>
    </Window.DataContext>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressState="{Binding MainWindowProgressState, UpdateSourceTrigger=PropertyChanged}" ProgressValue="{Binding MainWindowProgressValue, UpdateSourceTrigger=PropertyChanged}"/>
    </Window.TaskbarItemInfo>
    <i:Interaction.Behaviors>
        <Behaviours:BorderlessWindowBehavior ResizeWithGrip="True" EnableDWMDropShadow="True" />
    </i:Interaction.Behaviors>
    <metro:MetroWindow.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
                <ResourceDictionary Source="/Resources/Icons.xaml" />
                <ResourceDictionary Source="/Resources/StandardStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <conv:ImageCachingConverter x:Key="ImgCache"/>
            <conv:ThumbnailImageCachingConverter x:Key="TImgCache"/>

            <BooleanToVisibilityConverter x:Key="BTV"/>

            <DataTemplate x:Key="MangaListBoxItemTemplate">
                <Grid HorizontalAlignment="Left" Width="250" Height="250" Margin="6" Cursor="Hand" meap:LoadedOnceHelper.HandleLoadedBefore="True">
                    <Grid.CacheMode>
                        <BitmapCache EnableClearType="True" RenderAtScale="1.0" />
                    </Grid.CacheMode>
                    <Border>
                        <Image Source="{Binding ParentManga.BookImageUrl, Converter={StaticResource TImgCache}, ConverterParameter=250}" Stretch="UniformToFill" AutomationProperties.Name="{Binding Name}"/>
                    </Border>
                    <StackPanel VerticalAlignment="Bottom">
                        <StackPanel.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Color="Transparent" Offset="-1"/>
                                <!--<GradientStop Color="{DynamicResource WhiteColor}" Offset="1"/> Produces a nice effect-->
                                <GradientStop Color="{DynamicResource BlackColor}" Offset="1"/>
                            </LinearGradientBrush>
                        </StackPanel.Background>
                        <TextBlock Text="{Binding Name}" FontSize="18" Height="60" Margin="15,0,15,0">
                            <TextBlock.Foreground>
                                <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                            </TextBlock.Foreground>
                        </TextBlock>
                        <TextBlock Text="{Binding ReleaseDate}" FontSize="15" TextWrapping="NoWrap" Margin="15,0,15,10">
                            <TextBlock.Foreground>
                                <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                            </TextBlock.Foreground>
                        </TextBlock>
                    </StackPanel>
                </Grid>
            </DataTemplate>

            <Style TargetType="{x:Type ListBoxItem}" x:Key="MangaListBoxItemStyle">
                <!-- http://stackoverflow.com/questions/13035766/listbox-slide-animation-on-new-item-added -->
                <!--<Setter Property="LayoutTransform">
                        <Setter.Value>
                            <TranslateTransform />
                        </Setter.Value>
                    </Setter>-->
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <ScaleTransform />
                    </Setter.Value>
                </Setter>
                <Setter Property="ContentTemplate" Value="{StaticResource MangaListBoxItemTemplate}"/>
                <Style.Triggers>
                    <EventTrigger RoutedEvent="meap:LoadedOnceHelper.FirstLoaded">
                        <EventTrigger.Actions>
                            <BeginStoryboard Name="LoadedStoryBoardBegin">
                                <Storyboard  Timeline.DesiredFrameRate="60">
                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:.5" />

                                    <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(ScaleTransform.ScaleX)" To="1.0" From="1.5" Duration="0:0:.5"/>
                                    <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(ScaleTransform.ScaleY)" To="1.0" From="1.5" Duration="0:0:.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                    <!--<MultiTrigger>
                        <MultiTrigger.EnterActions>
                            <StopStoryboard BeginStoryboardName="LoadedStoryBoardBegin"/>
                            <BeginStoryboard Name="MouseEnterStoryBoardBegin" HandoffBehavior="SnapshotAndReplace">
                                <Storyboard Timeline.DesiredFrameRate="30">
                                    <Int32Animation Storyboard.TargetProperty="(Panel.ZIndex)" From="0" To="20" Duration="0:0:.2" />

                                    <DoubleAnimation Storyboard.TargetProperty="Height" From="250" To="270" Duration="0:0:.5" />
                                    <DoubleAnimation Storyboard.TargetProperty="Width" From="250" To="270" Duration="0:0:.5" />

                                    <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(ScaleTransform.ScaleX)" From="1.0" To="1.1" Duration="0:0:.5"/>
                                    <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(ScaleTransform.ScaleY)" From="1.0" To="1.1" Duration="0:0:.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </MultiTrigger.EnterActions>
                        <MultiTrigger.ExitActions>
                            <StopStoryboard BeginStoryboardName="MouseEnterStoryBoardBegin"/>
                            <BeginStoryboard HandoffBehavior="SnapshotAndReplace">
                                <Storyboard Timeline.DesiredFrameRate="30">
                                    <Int32Animation Storyboard.TargetProperty="(Panel.ZIndex)" From="20" To="0" Duration="0:0:.2" />

                                    <DoubleAnimation Storyboard.TargetProperty="Height" To="250" From="270" Duration="0:0:.5" />
                                    <DoubleAnimation Storyboard.TargetProperty="Width" To="250" From="270" Duration="0:0:.5" />

                                    <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(ScaleTransform.ScaleX)" To="1.0" From="1.1" Duration="0:0:.5"/>
                                    <DoubleAnimation Storyboard.TargetProperty="(FrameworkElement.RenderTransform).(ScaleTransform.ScaleY)" To="1.0" From="1.1" Duration="0:0:.5"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </MultiTrigger.ExitActions>
                        <MultiTrigger.Conditions>
                            <Condition Property="UIElement.IsMouseOver" Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Panel.ZIndex" Value="20"/>
                        <Setter Property="Grid.Effect">
                            <Setter.Value>
                                <DropShadowEffect Color="Gray" Opacity=".50" ShadowDepth="16" />
                            </Setter.Value>
                        </Setter>
                    </MultiTrigger>
                    <EventTrigger RoutedEvent="MouseEnter">
                        <EventTrigger.Actions>
 
                        </EventTrigger.Actions>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="MouseLeave">
                        <EventTrigger.Actions>

                        </EventTrigger.Actions>
                    </EventTrigger>-->
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </metro:MetroWindow.Resources>
    <Grid>
        <Label Panel.ZIndex="100" HorizontalAlignment="Center" VerticalAlignment="Top" 
               Content="{Binding Title, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type metro:MetroWindow}}}" FontSize="14"/>

        <metro:MetroAnimatedSingleRowTabControl Margin="5 25 5 5" SelectedIndex="0">
            <metro:MetroTabItem Header="{i18n:CrystalLocalizedValueMarkup Key='HomeTabHeader',NullValue='home'}" HeaderFontSize="15">
                <metro:MetroTabControl Margin="0 -7 0 0" TabStripMargin="0 -7 0 0">
                    <metro:MetroTabItem x:Name="todayReleasesTabItem" Header="{i18n:CrystalLocalizedValueMarkup Key='NewReleasesTabHeader', NullValue='today&quot;s releases'}">
                        <TabItem.DataContext>
                            <vm:MainWindowTodaysReleasesViewModel/>
                        </TabItem.DataContext>
                        <Grid>
                            <metro:ProgressRing Panel.ZIndex="5" VerticalAlignment="Center" HorizontalAlignment="Stretch" Width="40" Height="40" 
                                                IsActive="{Binding IsBusy, UpdateSourceTrigger=PropertyChanged}" Visibility="Visible"></metro:ProgressRing>
                            <Grid x:Name="todayReleasesErrorGrid" Visibility="{Binding IsError, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BTV}}" HorizontalAlignment="Center" VerticalAlignment="Center" Panel.ZIndex="5">
                                <StackPanel>
                                    <TextBlock Text="{i18n:CrystalLocalizedValueMarkup Key='ErrorRetrievingDataMsg', NullValue='Error retrieving data'}" FontSize="17"/>
                                    <Button HorizontalAlignment="Center" Content="{i18n:CrystalLocalizedValueMarkup Key='RetryTxt',NullValue='Retry'}" Command="{Binding RetryCommand}" Margin="0 3 0 0"/>
                                </StackPanel>
                            </Grid>
                            <ScrollViewer>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="100*"/>
                                    </Grid.RowDefinitions>

                                    <!--<Grid Grid.Row="0">
                                    <metro:FlipView DataContext="{Binding ., BindsDirectlyToSource=True}" 
                                        ItemsSource="{Binding RandomSelectedMangas, UpdateSourceTrigger=PropertyChanged}" 
                                        SelectedItem="{Binding RandomSelectedMangaItem, UpdateSourceTrigger=PropertyChanged}" 
                                        IsBannerEnabled="True" 
                                        BannerText="{Binding RandomSelectedMangaBannerText, UpdateSourceTrigger=PropertyChanged}" 
                                        Height="300" Width="400"
                                        x:Name="FlipView">
                                        <metro:FlipView.ItemTemplate>
                                            <DataTemplate>
                                                <Image Source="{Binding .}" Stretch="Fill" Height="300" Width="400"/>
                                            </DataTemplate>
                                        </metro:FlipView.ItemTemplate>
                                    </metro:FlipView>
                                </Grid>-->

                                    <Grid VerticalAlignment="Stretch" Grid.Row="0">
                                        <StackPanel>
                                            <ListBox x:Name="itemListView"
                                            Background="Transparent"
                                            AutomationProperties.AutomationId="ItemListView"
                                            AutomationProperties.Name="Grouped Items"
                                            Padding="116,137,40,46"
                                            VerticalAlignment="Stretch"
                                            HorizontalAlignment="Stretch"
                                            ItemsSource="{Binding NewReleasesToday, UpdateSourceTrigger=PropertyChanged}"
                                            MinHeight="700"
                                            SelectedItem="{Binding SelectedEntry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemContainerStyle="{StaticResource MangaListBoxItemStyle}">
                                                <ListBox.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel IsItemsHost="True" Width="{Binding (FrameworkElement.ActualWidth), RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"
    				                                       ItemWidth="250"
    				                                       MinWidth="{Binding ItemWidth, RelativeSource={RelativeSource Self}}"
                                                           MinHeight="700"
    				                                       ItemHeight="250">
                                                        </WrapPanel>
                                                    </ItemsPanelTemplate>
                                                </ListBox.ItemsPanel>
                                                <ListBox.ContextMenu>
                                                    <ContextMenu HasDropShadow="True">
                                                        <MenuItem Header="{i18n:CrystalLocalizedValueMarkup Key='ShowMangaMenuItem',NullValue='Show Manga Information...'}" Command="{Binding MangaInfoCommand}" CommandParameter="{Binding SelectedEntry}"/>
                                                        <MenuItem Header="{i18n:CrystalLocalizedValueMarkup Key='DownloadChapterMenuItem',NullValue='Download this chapter.'}" Command="{Binding MangaDownloadCommand}" CommandParameter="{Binding SelectedEntry}"/>
                                                    </ContextMenu>
                                                </ListBox.ContextMenu>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="MouseDoubleClick">
                                                        <i:InvokeCommandAction Command="{Binding MangaClickCommand}" CommandParameter="{Binding SelectedEntry}"/>
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                            </ListBox>
                                        </StackPanel>
                                    </Grid>
                                </Grid>
                            </ScrollViewer>
                        </Grid>
                    </metro:MetroTabItem>
                    <metro:MetroTabItem Header="{i18n:CrystalLocalizedValueMarkup Key='AmrykidsFavoritesTabHeader',NullValue='amrykid&quot;s favorites'}">
                        <TabItem.DataContext>
                            <vm:MainWindowAmrykidsFavoritesViewModel />
                        </TabItem.DataContext>
                        <Grid>
                            <metro:ProgressRing Panel.ZIndex="5" VerticalAlignment="Center" HorizontalAlignment="Stretch" Width="40" Height="40" 
                                                IsActive="{Binding IsBusy, UpdateSourceTrigger=PropertyChanged}" Visibility="Visible"></metro:ProgressRing>

                            <ListBox x:Name="amrykidsFavoritesListView"
                                Background="Transparent"
                                AutomationProperties.AutomationId="ItemListView"
                                AutomationProperties.Name="Grouped Items"
                                Grid.RowSpan="2"
                                Padding="116,137,40,46"
                                ItemsSource="{Binding AmrykidsFavorites, UpdateSourceTrigger=PropertyChanged}">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <WrapPanel IsItemsHost="True">
                                        </WrapPanel>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemContainerStyle>
                                    <!-- http://stackoverflow.com/questions/13035766/listbox-slide-animation-on-new-item-added -->
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="LayoutTransform">
                                            <Setter.Value>
                                                <ScaleTransform x:Name="transform" />
                                            </Setter.Value>
                                        </Setter>
                                        <Style.Triggers>
                                            <EventTrigger RoutedEvent="Loaded">
                                                <EventTrigger.Actions>
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:1" />
                                                            <DoubleAnimation Storyboard.TargetProperty="LayoutTransform.ScaleY" From="0" Duration="0:0:.2"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger.Actions>
                                            </EventTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <Grid HorizontalAlignment="Left" Width="250" Height="250" Cursor="Hand">
                                            <Border>
                                                <Image Source="{Binding BookImageUrl, Converter={StaticResource TImgCache}, ConverterParameter=250}" Stretch="UniformToFill" AutomationProperties.Name="{Binding MangaName}"/>
                                            </Border>
                                            <StackPanel VerticalAlignment="Bottom" Background="Gray">
                                                <TextBlock Text="{Binding MangaName, UpdateSourceTrigger=PropertyChanged}" Foreground="Black" FontSize="18" Height="60" Margin="15,0,15,0"/>
                                                <TextBlock Text="{Binding Author, UpdateSourceTrigger=PropertyChanged}" Foreground="White" FontSize="15" TextWrapping="NoWrap" Margin="15,0,15,10"/>
                                            </StackPanel>
                                        </Grid>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction Command="{Binding MangaClickCommand}" CommandParameter="{Binding ElementName=amrykidsFavoritesListView,Path=SelectedItem}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </ListBox>
                        </Grid>
                    </metro:MetroTabItem>
                </metro:MetroTabControl>
            </metro:MetroTabItem>
            <metro:MetroTabItem Header="{i18n:CrystalLocalizedValueMarkup Key='LibraryTabHeader',NullValue='library'}" HeaderFontSize="15" ScrollViewer.CanContentScroll="False">
                <TabItem.DataContext>
                    <vm:MainWindowLibraryViewModel/>
                </TabItem.DataContext>
                <Grid>
                    <!-- Group code from: http://karlshifflett.wordpress.com/2009/06/10/wpf-sample-series-listbox-grouping-sorting-subtotals-and-collapsible-regions/ -->
                    <!--<Grid.Resources>
                        <CollectionViewSource x:Key="GroupedItems" Source="{Binding LibraryItems, UpdateSourceTrigger=PropertyChanged}" x:Name="LibraryCollectionViewSource" Filter="LibraryCollectionViewSource_Filter">
                            <CollectionViewSource.GroupDescriptions>
                                <PropertyGroupDescription PropertyName="ParentManga.MangaName"/>
                            </CollectionViewSource.GroupDescriptions>
                            <CollectionViewSource.SortDescriptions>
                                <scm:SortDescription Direction="Ascending" PropertyName="ParentManga.MangaName"/>
                            </CollectionViewSource.SortDescriptions>
                        </CollectionViewSource>
                    </Grid.Resources>-->
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="20*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0">
                            <TextBox VerticalAlignment="Top" HorizontalAlignment="Right" metro:TextboxHelper.Watermark="Search..." metro:TextboxHelper.ClearTextButton="True" 
                             metro:TextboxHelper.SelectAllOnFocus="True" Width="200" Text="{Binding SearchFilter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Delay=200}" x:Name="LibrarySearchBox"/>
                        </Grid>
                        <ListBox ItemsSource="{Binding LibraryItems, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedEntry, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 Grid.Row="1" x:Name="LibraryListBox">
                            <ListBox.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.HeaderTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <!--<Image Height="100" Source="{Binding Items[0].ParentManga.BookImageUrl, Converter={StaticResource ImgCache}}"/>-->
                                                <TextBlock Text="{Binding Name}" FontSize="17" FontWeight="bold" Margin="5 0 0 0" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </GroupStyle.HeaderTemplate>
                                </GroupStyle>
                            </ListBox.GroupStyle>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Margin="10 0 0 0" Cursor="Hand">
                                        <TextBlock Text="{Binding Name}"/>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ContextMenu>
                                <ContextMenu HasDropShadow="True">
                                    <MenuItem Header="{i18n:CrystalLocalizedValueMarkup Key='ShowMangaMenuItem',NullValue='Show Manga Information...'}" Command="{Binding MangaInfoCommand}" CommandParameter="{Binding SelectedEntry}"/>
                                    <Separator />
                                    <MenuItem Header="{i18n:CrystalLocalizedValueMarkup Key='DeleteMangaMenuItem',NullValue='Delete'}" Command="{Binding DeleteMangaCommand}" CommandParameter="{Binding SelectedEntry}"/>
                                </ContextMenu>
                            </ListBox.ContextMenu>
                            <ListBox.InputBindings>
                                <KeyBinding Command="{Binding DeleteMangaCommand}" Key="Delete" CommandParameter="{Binding SelectedEntry}" />
                            </ListBox.InputBindings>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="MouseDoubleClick">
                                    <i:InvokeCommandAction Command="{Binding MangaClickCommand}" CommandParameter="{Binding SelectedEntry}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ListBox>
                    </Grid>
                </Grid>
            </metro:MetroTabItem>
            <metro:MetroTabItem Header="{i18n:CrystalLocalizedValueMarkup Key='CatalogTabHeader',NullValue='catalog'}" HeaderFontSize="15" ScrollViewer.CanContentScroll="False">
                <TabItem.DataContext>
                    <vm:MainWindowCatalogViewModel/>
                </TabItem.DataContext>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="20*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0">
                        <TextBox VerticalAlignment="Top" HorizontalAlignment="Right" metro:TextboxHelper.Watermark="Search..." metro:TextboxHelper.ClearTextButton="True" 
                             metro:TextboxHelper.SelectAllOnFocus="True" Width="200" Text="{Binding SearchFilter, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Delay=200}"/>
                    </Grid>

                    <ListBox Grid.Row="1" ItemsSource="{Binding AvailableMangas, IsAsync=True}" x:Name="CatalogListView" 
                             VirtualizingPanel.VirtualizationMode="Recycling" VirtualizingPanel.IsContainerVirtualizable="True" VirtualizingPanel.IsVirtualizing="True"
                             HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Cursor="Hand">
                                    <Image Source="{Binding BookImageUrl, Converter={StaticResource TImgCache}, ConverterParameter=100}" MaxWidth="100"/>
                                    <StackPanel Orientation="Vertical" Margin="2">
                                        <Label FontSize="18" Content="{Binding MangaName, UpdateSourceTrigger=PropertyChanged}"/>
                                        <TextBlock Text="{Binding Description, UpdateSourceTrigger=PropertyChanged}" TextTrimming="CharacterEllipsis" Margin="9 0 20 0" MaxWidth="1400" Height="Auto"/>
                                        <TextBlock Text="{Binding Status, UpdateSourceTrigger=PropertyChanged,StringFormat='Status: {0}'}" FontSize="16" Margin="9 0 0 0" Foreground="{DynamicResource AccentColorBrush}"/>
                                        <ListBox ItemsSource="{Binding Categories, UpdateSourceTrigger=PropertyChanged}">
                                            <ListBox.ItemsPanel>
                                                <ItemsPanelTemplate>
                                                    <WrapPanel ItemHeight="60" ItemWidth="Auto" IsItemsHost="True" 
                                                               Width="{Binding (FrameworkElement.ActualWidth), RelativeSource={RelativeSource AncestorType=ScrollContentPresenter}}"/>
                                                </ItemsPanelTemplate>
                                            </ListBox.ItemsPanel>
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Border BorderBrush="{DynamicResource AccentColorBrush}" BorderThickness="1" CornerRadius="4" Padding="1" Background="{DynamicResource AccentColorBrush}">
                                                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{DynamicResource AccentColorBrush}">
                                                            <Label Content="{Binding .}" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                                <Label.Foreground>
                                                                    <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                                                                </Label.Foreground>
                                                            </Label>
                                                        </Grid>
                                                    </Border>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                            <ListBox.Resources>
                                                <Style TargetType="{x:Type ListBoxItem}">
                                                    <Style.Resources>
                                                        <!-- Background of selected item when focussed -->
                                                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
                                                        <!-- Background of selected item when not focussed -->
                                                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
                                                    </Style.Resources>
                                                </Style>
                                            </ListBox.Resources>
                                        </ListBox>
                                    </StackPanel>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding MangaClickCommand}" CommandParameter="{Binding ElementName=CatalogListView,Path=SelectedItem}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ListBox>
                </Grid>
            </metro:MetroTabItem>
            <metro:MetroTabItem Header="{i18n:CrystalLocalizedValueMarkup Key='DownloadsTabHeader',NullValue='downloads'}" HeaderFontSize="15">
                <TabItem.DataContext>
                    <vm:MainWindowDownloadsViewModel/>
                </TabItem.DataContext>
                <ListView ItemsSource="{Binding Downloads, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedItem, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" x:Name="downloadsListView">
                    <ListView.View>
                        <GridView>
                            <GridViewColumn Header="{i18n:CrystalLocalizedValueMarkup Key='MangaDownloadNameColumn',NullValue='Name'}" DisplayMemberBinding="{Binding Chapter.Name}" Width="Auto"/>
                            <GridViewColumn Header="{i18n:CrystalLocalizedValueMarkup Key='MangaDownloadParentMangaColumn',NullValue='Manga'}" DisplayMemberBinding="{Binding Chapter.ParentManga.MangaName}" Width="Auto"/>
                            <GridViewColumn Header="{i18n:CrystalLocalizedValueMarkup Key='MangaDownloadStatusColumn',NullValue='Status'}" DisplayMemberBinding="{Binding Status}"/>
                            <GridViewColumn Header="{i18n:CrystalLocalizedValueMarkup Key='MangaDownloadProgressColumn',NullValue='Progress'}" Width="300">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <metro:MetroProgressBar Value="{Binding Progress, UpdateSourceTrigger=PropertyChanged}" Maximum="{Binding MaxProgress, UpdateSourceTrigger=PropertyChanged}">
                                            <ProgressBar.Foreground>
                                                <SolidColorBrush Color="{DynamicResource AccentColor}"/>
                                            </ProgressBar.Foreground>
                                        </metro:MetroProgressBar>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="{i18n:CrystalLocalizedValueMarkup Key='CancelMangaDownloadItem',NullValue='Cancel Download'}" Command="{Binding CancelDownloadCommand}" CommandParameter="{Binding SelectedItem}"/>
                        </ContextMenu>
                    </ListView.ContextMenu>
                </ListView>
            </metro:MetroTabItem>
        </metro:MetroAnimatedSingleRowTabControl>

        <Button Style="{DynamicResource MetroCircleButtonStyle}" Height="40" Width="40" Command="{Binding SettingsFlyoutCommand, UpdateSourceTrigger=PropertyChanged}" Cursor="Hand" Panel.ZIndex="100" HorizontalAlignment="Right" VerticalAlignment="Bottom">
            <Rectangle Width="20" Height="20">
                <Rectangle.Fill>
                    <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_settings}" />
                </Rectangle.Fill>
            </Rectangle>
        </Button>
    </Grid>
    <metro:MetroWindow.Flyouts>
        <metro:Flyout Header="{i18n:CrystalLocalizedValueMarkup Key='SettingsFlyoutHeader',NullValue='settings'}" x:Name="SettingsFlyout" IsOpen="{Binding ElementName=thisWindow,Path=DataContext.SettingsFlyoutOpen, UpdateSourceTrigger=PropertyChanged}">
            <metro:Flyout.DataContext>
                <vm:MainWindowSettingsViewModel />
            </metro:Flyout.DataContext>
            <metro:Flyout.Resources>
                <ObjectDataProvider MethodName="GetValues"
                        ObjectType="{x:Type metro2:Theme}"
                        x:Key="ThemeValues">
                    <ObjectDataProvider.MethodParameters>
                        <x:Type TypeName="metro2:Theme" />
                    </ObjectDataProvider.MethodParameters>
                </ObjectDataProvider>
            </metro:Flyout.Resources>
            <StackPanel>
                <GroupBox Header="{i18n:CrystalLocalizedValueMarkup Key='GeneralSettingsHeader',NullValue='General'}" Height="Auto">
                    <metro:ToggleSwitch IsChecked="{Binding CanMinimizeToTray, UpdateSourceTrigger=PropertyChanged}" Header="{i18n:CrystalLocalizedValueMarkup Key='Can Minimize To Tray?',NullValue='Can Minimize To Tray?'}"/>
                </GroupBox>
                <GroupBox Header="{i18n:CrystalLocalizedValueMarkup Key='ThemeSettingsHeader',NullValue='Theme'}" Height="Auto">
                    <StackPanel Orientation="Horizontal">
                        <ComboBox ItemsSource="{Binding AvailableAccents, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedAccent, UpdateSourceTrigger=PropertyChanged}" Height="20" DisplayMemberPath="Name"/>
                        <ComboBox ItemsSource="{Binding Source={StaticResource
                                             ThemeValues}}" SelectedItem="{Binding SelectedTheme, UpdateSourceTrigger=PropertyChanged}" Height="20">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <!-- This combobox doesn't like the flyout very well so I am forcing it to use the color I want.-->
                                    <TextBlock Text="{Binding .}">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="{DynamicResource NormalForegroundColor}"/>
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
        </metro:Flyout>
    </metro:MetroWindow.Flyouts>
</metro:MetroWindow>
